{"ast":null,"code":"var _jsxFileName = \"F:\\\\my project\\\\Vendor\\\\client\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// client/src/components/ProtectedRoute.jsx\nimport { Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    token\n  } = useAuth();\n\n  // If not logged in → go to /auth\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  return children; // Logged in → allow access\n}\n_s(ProtectedRoute, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","token","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/my project/Vendor/client/src/components/ProtectedRoute.jsx"],"sourcesContent":["// client/src/components/ProtectedRoute.jsx\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default function ProtectedRoute({ children }) {\r\n  const { token } = useAuth();\r\n\r\n  // If not logged in → go to /auth\r\n  if (!token) {\r\n    return <Navigate to=\"/auth\" replace />;\r\n  }\r\n\r\n  return children; // Logged in → allow access\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAM,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAE3B;EACA,IAAI,CAACM,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC,OAAO;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxC;EAEA,OAAOR,QAAQ,CAAC,CAAC;AACnB;AAACC,EAAA,CATuBF,cAAc;EAAA,QAClBH,OAAO;AAAA;AAAAa,EAAA,GADHV,cAAc;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}