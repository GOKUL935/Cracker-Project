{"ast":null,"code":"var _jsxFileName = \"F:\\\\my project\\\\Vendor\\\\client\\\\src\\\\pages\\\\Checkout.jsx\",\n  _s = $RefreshSig$();\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\n\n// Stripe public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLISHABLE_KEY);\nfunction Checkout() {\n  _s();\n  const location = useLocation();\n  const {\n    cartItems,\n    totalAmount\n  } = location.state || {\n    cartItems: [],\n    totalAmount: 0\n  };\n  const [loading, setLoading] = useState(false);\n  const handleStripePayment = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // ✅ Correct: Always call backend port 4000\n      const response = await fetch(\"http://localhost:4000/v1/checkout/sessions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cartItems,\n          totalAmount\n        })\n      });\n      const data = await response.json();\n      if (data.url) {\n        window.location.href = data.url; // redirect to Stripe Checkout\n      } else {\n        alert(\"❌ Checkout failed: \" + (data.error || \"Unknown error\"));\n      }\n    } catch (err) {\n      alert(\"Checkout failed: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [item.name, \" (\", item.quantity, \"x) - \\u20B9\", item.price * item.quantity]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: \\u20B9\", totalAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStripePayment,\n      disabled: loading,\n      style: {\n        background: \"green\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        border: \"none\"\n      },\n      children: loading ? \"Processing...\" : \"Pay with Stripe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Checkout, \"VPigqhbO0ksD/1EIk7ItFHW2+hM=\", false, function () {\n  return [useLocation];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["loadStripe","useLocation","useState","jsxDEV","_jsxDEV","stripePromise","import","meta","env","VITE_STRIPE_PUBLISHABLE_KEY","Checkout","_s","location","cartItems","totalAmount","state","loading","setLoading","handleStripePayment","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","url","window","href","alert","error","err","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","quantity","price","onClick","disabled","background","color","border","_c","$RefreshReg$"],"sources":["F:/my project/Vendor/client/src/pages/Checkout.jsx"],"sourcesContent":["import { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\n// Stripe public key\r\nconst stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLISHABLE_KEY);\r\n\r\nfunction Checkout() {\r\n  const location = useLocation();\r\n  const { cartItems, totalAmount } = location.state || { cartItems: [], totalAmount: 0 };\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleStripePayment = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // ✅ Correct: Always call backend port 4000\r\n      const response = await fetch(\"http://localhost:4000/v1/checkout/sessions\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ cartItems, totalAmount }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.url) {\r\n        window.location.href = data.url; // redirect to Stripe Checkout\r\n      } else {\r\n        alert(\"❌ Checkout failed: \" + (data.error || \"Unknown error\"));\r\n      }\r\n    } catch (err) {\r\n      alert(\"Checkout failed: \" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"30px\" }}>\r\n      <h2>Checkout</h2>\r\n      {cartItems.map((item, index) => (\r\n        <p key={index}>\r\n          {item.name} ({item.quantity}x) - ₹{item.price * item.quantity}\r\n        </p>\r\n      ))}\r\n      <h3>Total: ₹{totalAmount}</h3>\r\n\r\n      <button\r\n        onClick={handleStripePayment}\r\n        disabled={loading}\r\n        style={{ background: \"green\", color: \"white\", padding: \"10px 20px\", border: \"none\" }}\r\n      >\r\n        {loading ? \"Processing...\" : \"Pay with Stripe\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGL,UAAU,CAACM,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,2BAA2B,CAAC;AAE7E,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,SAAS;IAAEC;EAAY,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI;IAAEF,SAAS,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAE,CAAC;EACtF,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMgB,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,SAAS;UAAEC;QAAY,CAAC;MACjD,CAAC,CAAC;MAEF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,GAAG,EAAE;QACZC,MAAM,CAACnB,QAAQ,CAACoB,IAAI,GAAGJ,IAAI,CAACE,GAAG,CAAC,CAAC;MACnC,CAAC,MAAM;QACLG,KAAK,CAAC,qBAAqB,IAAIL,IAAI,CAACM,KAAK,IAAI,eAAe,CAAC,CAAC;MAChE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZF,KAAK,CAAC,mBAAmB,GAAGE,GAAG,CAACC,OAAO,CAAC;IAC1C,CAAC,SAAS;MACRnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKiC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BnC,OAAA;MAAAmC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB9B,SAAS,CAAC+B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzB1C,OAAA;MAAAmC,QAAA,GACGM,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,QAAQ,EAAC,aAAM,EAACH,IAAI,CAACI,KAAK,GAAGJ,IAAI,CAACG,QAAQ;IAAA,GADvDF,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACJ,CAAC,eACFvC,OAAA;MAAAmC,QAAA,GAAI,eAAQ,EAACzB,WAAW;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE9BvC,OAAA;MACE8C,OAAO,EAAEhC,mBAAoB;MAC7BiC,QAAQ,EAAEnC,OAAQ;MAClBqB,KAAK,EAAE;QAAEe,UAAU,EAAE,OAAO;QAAEC,KAAK,EAAE,OAAO;QAAEf,OAAO,EAAE,WAAW;QAAEgB,MAAM,EAAE;MAAO,CAAE;MAAAf,QAAA,EAEpFvB,OAAO,GAAG,eAAe,GAAG;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CAlDQD,QAAQ;EAAA,QACET,WAAW;AAAA;AAAAsD,EAAA,GADrB7C,QAAQ;AAoDjB,eAAeA,QAAQ;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}